{"ast":null,"code":"var _jsxFileName = \"E:\\\\Saved Pictures\\\\office project\\\\Blockchain Project\\\\Twitter DAPP blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Tweets from \"./components/Tweets\";\nimport AddTweet from \"./components/AddTweet\";\nimport Connect from \"./components/Connect\";\nimport ProfileCreation from \"./components/ProfileCreation\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [profileExists, setProfileExists] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [profileContract, setProfileContract] = useState(null);\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function getTweets() {\n    if (!web3 || !contract) {\n      console.error(\"Web3 or contract not initialized.\");\n      return;\n    }\n    const tempTweets = await contract.methods.getAllTweets(account).call();\n    // we do this so we can sort the tweets by timestamp\n    const tweets = [...tempTweets];\n    tweets.sort((a, b) => b.timestamp - a.timestamp);\n    setTweets(tweets);\n    setLoading(false);\n  }\n  async function checkProfile() {\n    const userProfile = await getProfile(account);\n    setProfileExists(userProfile);\n  }\n  async function getProfile() {\n    if (!web3 || !profileContract || !account) {\n      console.error(\"Web3 or profileContract not initialized or account not connected.\");\n      return;\n    }\n    const profile = await profileContract.methods.getProfile(account).call();\n    setLoading(false);\n    return profile.displayName;\n  }\n  useEffect(() => {\n    if (contract && account) {\n      if (profileExists) {\n        getTweets();\n      } else {\n        checkProfile();\n      }\n    }\n  }, [contract, account, profileExists]);\n  function shortAddress(address) {\n    let startLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    let endLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n    if (address === account && profileExists) {\n      return profileExists;\n    } else if (address) {\n      return \"\".concat(address.slice(0, startLength), \"...\").concat(address.slice(-endLength));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twitter DAPP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Connect, {\n      web3: web3,\n      setWeb3: setWeb3,\n      account: account,\n      setAccount: setAccount,\n      setContract: setContract,\n      shortAddress: shortAddress,\n      setProfileContract: setProfileContract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !loading && account && profileExists ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddTweet, {\n        contract: contract,\n        account: account,\n        getTweets: getTweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tweets, {\n        tweets: tweets,\n        shortAddress: shortAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : account && !loading && /*#__PURE__*/_jsxDEV(ProfileCreation, {\n      account: account,\n      profileContract: profileContract,\n      checkProfile: checkProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cnrywpJoHyPYLxlj/vOwTFaPUmA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Tweets","AddTweet","Connect","ProfileCreation","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","profileExists","setProfileExists","web3","setWeb3","contract","setContract","profileContract","setProfileContract","tweets","setTweets","loading","setLoading","getTweets","console","error","tempTweets","methods","getAllTweets","call","sort","a","b","timestamp","checkProfile","userProfile","getProfile","profile","displayName","shortAddress","address","startLength","arguments","length","undefined","endLength","concat","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Saved Pictures/office project/Blockchain Project/Twitter DAPP blockchain/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\n\nimport Tweets from \"./components/Tweets\";\nimport AddTweet from \"./components/AddTweet\";\nimport Connect from \"./components/Connect\";\nimport ProfileCreation from \"./components/ProfileCreation\";\n\nexport default function App() {\n  const [account, setAccount] = useState(null);\n  const [profileExists, setProfileExists] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [profileContract, setProfileContract] = useState(null);\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  async function getTweets() {\n    if (!web3 || !contract) {\n      console.error(\"Web3 or contract not initialized.\");\n      return;\n    }\n\n    const tempTweets = await contract.methods.getAllTweets(account).call();\n    // we do this so we can sort the tweets by timestamp\n    const tweets = [...tempTweets];\n    tweets.sort((a, b) => b.timestamp - a.timestamp);\n    setTweets(tweets);\n    setLoading(false);\n  }\n\n  async function checkProfile() {\n    const userProfile = await getProfile(account);\n\n    setProfileExists(userProfile);\n  }\n\n  async function getProfile() {\n    if (!web3 || !profileContract || !account) {\n      console.error(\n        \"Web3 or profileContract not initialized or account not connected.\"\n      );\n      return;\n    }\n\n    const profile = await profileContract.methods.getProfile(account).call();\n    setLoading(false);\n    return profile.displayName;\n  }\n\n  useEffect(() => {\n    if (contract && account) {\n      if (profileExists) {\n        getTweets();\n      } else {\n        checkProfile();\n      }\n    }\n  }, [contract, account, profileExists]);\n\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    if (address === account && profileExists) {\n      return profileExists;\n    } else if (address) {\n      return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Twitter DAPP</h1>\n      <Connect\n        web3={web3}\n        setWeb3={setWeb3}\n        account={account}\n        setAccount={setAccount}\n        setContract={setContract}\n        shortAddress={shortAddress}\n        setProfileContract={setProfileContract}\n      />\n      {!loading && account && profileExists ? (\n        <>\n          <AddTweet\n            contract={contract}\n            account={account}\n            getTweets={getTweets}\n          />\n          <Tweets tweets={tweets} shortAddress={shortAddress} />\n        </>\n      ) : (\n        account &&\n        !loading && (\n          <ProfileCreation\n            account={account}\n            profileContract={profileContract}\n            checkProfile={checkProfile}\n          />\n        )\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}