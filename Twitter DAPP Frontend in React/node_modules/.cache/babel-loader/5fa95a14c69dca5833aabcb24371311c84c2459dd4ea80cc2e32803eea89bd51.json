{"ast":null,"code":"var _jsxFileName = \"E:\\\\Saved Pictures\\\\office project\\\\Blockchain Project\\\\Twitter DAPP blockchain\\\\src\\\\components\\\\Connect.js\";\nimport Web3 from \"web3\";\nimport contractABI from \"../contracts/main.json\";\nimport profileContractABI from \"../contracts/user.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0xD03ed2100F59eD19819093eDf1bf8618cC71Dc63\";\nconst profileContractAddress = \"0xDb17eDFBC8e9b5AAaea0fF0885E3B0f99771727E\";\nconst Connect = _ref => {\n  let {\n    web3,\n    account,\n    shortAddress,\n    setContract,\n    setAccount,\n    setProfileContract,\n    setWeb3\n  } = _ref;\n  async function switchToSepolia() {\n    try {\n      // Request user to switch to Sepolia\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: \"0xaa36a7\"\n        }] // Chain ID for Sepolia in hexadecimal\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          // If Sepolia is not added to user's MetaMask, add it\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: \"0xaa36a7\",\n              chainName: \"Sepolia\",\n              nativeCurrency: {\n                name: \"ETH\",\n                symbol: \"ETH\",\n                decimals: 18\n              },\n              rpcUrls: [\"https://rpc.sepolia.org\"]\n            }]\n          });\n        } catch (addError) {\n          console.error(\"Failed to add Sepolia network to MetaMask\", addError);\n        }\n      } else {\n        console.error(\"Failed to switch to Sepolia network\", switchError);\n      }\n    }\n  }\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.enable();\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n        if (networkId !== \"100\") {\n          // Network ID for Sepolia\n          await switchToSepolia();\n        }\n\n        // user enables the app to connect to MetaMask\n        const tempWeb3 = new Web3(window.ethereum);\n        setWeb3(tempWeb3);\n        const contractInstance = new tempWeb3.eth.Contract(contractABI, contractAddress);\n        const profileContractInstance = new tempWeb3.eth.Contract(profileContractABI, profileContractAddress);\n        setProfileContract(profileContractInstance);\n        console.log(\"HIIIIIII\");\n        const accounts = await tempWeb3.eth.getAccounts();\n        console.log(\"aCCOUNTS\", accounts);\n        if (accounts.length > 0) {\n          setContract(contractInstance);\n          setAccount(accounts[0]);\n        }\n        console.log(\"NAHHHHHH\");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.error(\"No web3 provider detected\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect\",\n      children: !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"connectWalletBtn\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"userAddress\",\n        children: [\"Connected: \", shortAddress(account)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"connectMessage\",\n      children: !account ? \"Please connect your wallet to tweet.\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Connect;\nexport default Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["Web3","contractABI","profileContractABI","jsxDEV","_jsxDEV","Fragment","_Fragment","contractAddress","profileContractAddress","Connect","_ref","web3","account","shortAddress","setContract","setAccount","setProfileContract","setWeb3","switchToSepolia","window","ethereum","request","method","params","chainId","switchError","code","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","addError","console","error","connectWallet","enable","networkId","tempWeb3","contractInstance","eth","Contract","profileContractInstance","log","accounts","getAccounts","length","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Saved Pictures/office project/Blockchain Project/Twitter DAPP blockchain/src/components/Connect.js"],"sourcesContent":["import Web3 from \"web3\";\nimport contractABI from \"../contracts/main.json\";\nimport profileContractABI from \"../contracts/user.json\";\n\nconst contractAddress = \"0xD03ed2100F59eD19819093eDf1bf8618cC71Dc63\";\nconst profileContractAddress = \"0xDb17eDFBC8e9b5AAaea0fF0885E3B0f99771727E\";\n\nconst Connect = ({\n  web3,\n  account,\n  shortAddress,\n  setContract,\n  setAccount,\n  setProfileContract,\n  setWeb3\n}) => {\n  async function switchToSepolia() {\n    try {\n      // Request user to switch to Sepolia\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0xaa36a7\" }] // Chain ID for Sepolia in hexadecimal\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          // If Sepolia is not added to user's MetaMask, add it\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0xaa36a7\",\n                chainName: \"Sepolia\",\n                nativeCurrency: {\n                  name: \"ETH\",\n                  symbol: \"ETH\",\n                  decimals: 18\n                },\n                rpcUrls: [\"https://rpc.sepolia.org\"]\n              }\n            ]\n          });\n        } catch (addError) {\n          console.error(\"Failed to add Sepolia network to MetaMask\", addError);\n        }\n      } else {\n        console.error(\"Failed to switch to Sepolia network\", switchError);\n      }\n    }\n  }\n\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.enable();\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n\n        if (networkId !== \"100\") {\n          // Network ID for Sepolia\n          await switchToSepolia();\n        }\n\n        // user enables the app to connect to MetaMask\n        const tempWeb3 = new Web3(window.ethereum);\n        setWeb3(tempWeb3);\n        const contractInstance = new tempWeb3.eth.Contract(\n          contractABI,\n          contractAddress\n        );\n\n        const profileContractInstance = new tempWeb3.eth.Contract(\n          profileContractABI,\n          profileContractAddress\n        );\n        setProfileContract(profileContractInstance);\n        console.log(\"HIIIIIII\");\n        const accounts = await tempWeb3.eth.getAccounts();\n        console.log(\"aCCOUNTS\", accounts);\n        if (accounts.length > 0) {\n          setContract(contractInstance);\n          setAccount(accounts[0]);\n        }\n        console.log(\"NAHHHHHH\");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.error(\"No web3 provider detected\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"connect\">\n        {!account ? (\n          <button id=\"connectWalletBtn\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        ) : (\n          <div id=\"userAddress\">Connected: {shortAddress(account)}</div>\n        )}\n      </div>\n      <div id=\"connectMessage\">\n        {!account ? \"Please connect your wallet to tweet.\" : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Connect;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,kBAAkB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,eAAe,GAAG,4CAA4C;AACpE,MAAMC,sBAAsB,GAAG,4CAA4C;AAE3E,MAAMC,OAAO,GAAGC,IAAA,IAQV;EAAA,IARW;IACfC,IAAI;IACJC,OAAO;IACPC,YAAY;IACZC,WAAW;IACXC,UAAU;IACVC,kBAAkB;IAClBC;EACF,CAAC,GAAAP,IAAA;EACC,eAAeQ,eAAeA,CAAA,EAAG;IAC/B,IAAI;MACF;MACA,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC5BC,MAAM,EAAE,4BAA4B;QACpCC,MAAM,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAW,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,WAAW,EAAE;MACpB,IAAIA,WAAW,CAACC,IAAI,KAAK,IAAI,EAAE;QAC7B,IAAI;UACF;UACA,MAAMP,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAC5BC,MAAM,EAAE,yBAAyB;YACjCC,MAAM,EAAE,CACN;cACEC,OAAO,EAAE,UAAU;cACnBG,SAAS,EAAE,SAAS;cACpBC,cAAc,EAAE;gBACdC,IAAI,EAAE,KAAK;gBACXC,MAAM,EAAE,KAAK;gBACbC,QAAQ,EAAE;cACZ,CAAC;cACDC,OAAO,EAAE,CAAC,yBAAyB;YACrC,CAAC;UAEL,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,QAAQ,EAAE;UACjBC,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAEF,QAAQ,CAAC;QACtE;MACF,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEV,WAAW,CAAC;MACnE;IACF;EACF;EAEA,eAAeW,aAAaA,CAAA,EAAG;IAC7B,IAAIjB,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMD,MAAM,CAACC,QAAQ,CAACiB,MAAM,CAAC,CAAC;QAC9B,MAAMC,SAAS,GAAG,MAAMnB,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;UAC9CC,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAIgB,SAAS,KAAK,KAAK,EAAE;UACvB;UACA,MAAMpB,eAAe,CAAC,CAAC;QACzB;;QAEA;QACA,MAAMqB,QAAQ,GAAG,IAAIvC,IAAI,CAACmB,MAAM,CAACC,QAAQ,CAAC;QAC1CH,OAAO,CAACsB,QAAQ,CAAC;QACjB,MAAMC,gBAAgB,GAAG,IAAID,QAAQ,CAACE,GAAG,CAACC,QAAQ,CAChDzC,WAAW,EACXM,eACF,CAAC;QAED,MAAMoC,uBAAuB,GAAG,IAAIJ,QAAQ,CAACE,GAAG,CAACC,QAAQ,CACvDxC,kBAAkB,EAClBM,sBACF,CAAC;QACDQ,kBAAkB,CAAC2B,uBAAuB,CAAC;QAC3CT,OAAO,CAACU,GAAG,CAAC,UAAU,CAAC;QACvB,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACE,GAAG,CAACK,WAAW,CAAC,CAAC;QACjDZ,OAAO,CAACU,GAAG,CAAC,UAAU,EAAEC,QAAQ,CAAC;QACjC,IAAIA,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;UACvBjC,WAAW,CAAC0B,gBAAgB,CAAC;UAC7BzB,UAAU,CAAC8B,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzB;QACAX,OAAO,CAACU,GAAG,CAAC,UAAU,CAAC;MACzB,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACLD,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;IAC5C;EACF;EAEA,oBACE/B,OAAA,CAAAE,SAAA;IAAA0C,QAAA,gBACE5C,OAAA;MAAK6C,SAAS,EAAC,SAAS;MAAAD,QAAA,EACrB,CAACpC,OAAO,gBACPR,OAAA;QAAQ8C,EAAE,EAAC,kBAAkB;QAACC,OAAO,EAAEf,aAAc;QAAAY,QAAA,EAAC;MAEtD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETnD,OAAA;QAAK8C,EAAE,EAAC,aAAa;QAAAF,QAAA,GAAC,aAAW,EAACnC,YAAY,CAACD,OAAO,CAAC;MAAA;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAC9D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNnD,OAAA;MAAK8C,EAAE,EAAC,gBAAgB;MAAAF,QAAA,EACrB,CAACpC,OAAO,GAAG,sCAAsC,GAAG;IAAE;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACC,EAAA,GAtGI/C,OAAO;AAwGb,eAAeA,OAAO;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}